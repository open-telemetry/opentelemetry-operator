name: Auto-update agents

on:
  schedule:
    # Daily at 01:30 (UTC)
    - cron: '30 1 * * *'
  workflow_dispatch:
  pull_request:

jobs:
  update-agent:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        agent: [java, dotnet, nodejs, python]
    steps:
      - uses: actions/checkout@v4

      - id: check-versions
        name: Check versions
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          case ${{ matrix.agent }} in
            java)
              current_version=$(grep -Po "[0-9]+.[0-9]+.[0-9]+" autoinstrumentation/java/version.txt)
              latest_version=$(gh release view \
                                  --repo open-telemetry/opentelemetry-java-instrumentation \
                                  --json tagName \
                                  --jq .tagName \
                                | sed 's/^v//')
              ;;
            dotnet)
              current_version=$(grep -Po "[0-9]+.[0-9]+.[0-9]+" autoinstrumentation/dotnet/version.txt)
              latest_version=$(gh release view \
                                  --repo open-telemetry/opentelemetry-dotnet-instrumentation \
                                  --json tagName \
                                  --jq .tagName \
                                | sed 's/^v//')
              ;;
            nodejs)
              current_version=$(grep -Po "[0-9]+.[0-9]+.[0-9]+" autoinstrumentation/nodejs/package.json)
              latest_version=$(gh release view \
                                  --repo open-telemetry/opentelemetry-js \
                                  --json tagName \
                                  --jq .tagName \
                                | sed 's/^v//')
              ;;
            python)
              current_version=$(head -n 1 autoinstrumentation/python/requirements.txt | cut -d '=' -f3)
              latest_version=$(gh release view \
                                  --repo open-telemetry/opentelemetry-python \
                                  --json tagName \
                                  --jq .tagName \
                                | sed 's/^v//')
              ;;
          esac

          matches=$(gh pr list \
                        --author opentelemetrybot \
                        --state open \
                        --search "in:title \"Update the OpenTelemetry ${{ matrix.agent }} agent version to $latest_version\"")
          if [ ! -z "$matches" ]
          then
            already_opened=true
          fi

          # Ensure proper format and remove any unintended characters
          echo "current-version=${current_version}" >> $GITHUB_OUTPUT
          echo "latest-version=${latest_version}" >> $GITHUB_OUTPUT
          echo "already-opened=${already_opened}" >> $GITHUB_OUTPUT

      - name: Update version
        if: |
          steps.check-versions.outputs.current-version != steps.check-versions.outputs.latest-version &&
          steps.check-versions.outputs.already-opened != 'true'
        env:
          VERSION: ${{ steps.check-versions.outputs.latest-version }}
        run: |
          case ${{ matrix.agent }} in
            java)
              echo $VERSION > autoinstrumentation/java/version.txt
              ;;
            dotnet)
              echo $VERSION > autoinstrumentation/dotnet/version.txt
              ;;
            nodejs)
              sed -i "s/\"@opentelemetry\/auto-instrumentations-node\": \".*\"/\"@opentelemetry\/auto-instrumentations-node\": \"$VERSION\"/" autoinstrumentation/nodejs/package.json
              ;;
            python)
              sed -i "s/^opentelemetry-distro==.*/opentelemetry-distro==$VERSION/" autoinstrumentation/python/requirements.txt
              ;;
          esac

      - name: Use CLA approved github bot
        run: |
          git config user.name opentelemetrybot
          git config user.email 107717825+opentelemetrybot@users.noreply.github.com

      - name: Create pull request against main
        if: |
          steps.check-versions.outputs.current-version != steps.check-versions.outputs.latest-version &&
          steps.check-versions.outputs.already-opened != 'true'
        env:
          VERSION: ${{ steps.check-versions.outputs.latest-version }}
          # not using secrets.GITHUB_TOKEN since pull requests from that token do not run workflows
          GH_TOKEN: ${{ secrets.OPENTELEMETRYBOT_GITHUB_TOKEN }}
        run: |
          message="Update the OpenTelemetry ${{ matrix.agent }} agent version to $VERSION"
          body="Update the OpenTelemetry ${{ matrix.agent }} agent version to \`$VERSION\`."
          branch="opentelemetrybot/update-opentelemetry-${{ matrix.agent }}-agent-to-${VERSION}"

          git checkout -b $branch
          git commit -a -m "$message"
          git push --set-upstream origin $branch
          gh pr create --title "$message" \
                       --body "$body" \
                       --base main
