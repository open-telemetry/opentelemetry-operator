name: "End-to-end tests"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  e2e-tests:
    name: End-to-end tests ${{ matrix.group }} on K8s ${{ matrix.kube-version }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
       # The e2e tests are run on the lowest and highest supported k8s version.
       # All Kubernetes version in between expose the same APIs, hence the operator
       # should be compatible with them.
       kube-version:
         - "1.23"
         - "1.29"
       group:
         - e2e
         - e2e-instrumentation
         - e2e-upgrade
         - e2e-autoscale
         - e2e-pdb
         - e2e-opampbridge
         - e2e-prometheuscr
         - e2e-multi-instrumentation
       include:
         - group: e2e-prometheuscr
           setup: "prepare-e2e-with-featuregates FEATUREGATES=+operator.observability.prometheus"
         - group: e2e-multi-instrumentation
           setup: "prepare-e2e-with-featuregates FEATUREGATES=+operator.autoinstrumentation.multi-instrumentation"

    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: "~1.21.3"

    - name: Cache tools
      uses: actions/cache@v4
      with:
        path: bin
        key: ${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('Makefile') }}

    - name: Install tools
      run: make install-tools

    - name: "run tests"
      env:
        KUBE_VERSION: ${{ matrix.kube-version }}
      run: |
        make ${{ matrix.setup != '' && matrix.setup || 'prepare-e2e' }} KUBE_VERSION=$KUBE_VERSION VERSION=e2e
        make ${{ matrix.group }}

    - name: "log operator if failed"
      if: ${{ failure() }}
      env:
        KUBE_VERSION: ${{ matrix.kube-version }}
      run: make e2e-log-operator KUBE_VERSION=$KUBE_VERSION

  e2e-tests-check:
    runs-on: ubuntu-22.04
    if: always()
    needs: [e2e-tests]
    steps:
      - name: Print result
        run: echo ${{ needs.e2e-tests.result }}
      - name: Interpret result
        run: |
          if [[ success == ${{ needs.e2e-tests.result }} ]]
          then
            echo "All matrix jobs passed!"
          else
            echo "One or more matrix jobs failed."
            false
          fi
