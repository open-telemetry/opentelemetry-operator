name: "Publish PHP Auto-Instrumentation"

on:
  push:
    paths:
      - 'autoinstrumentation/php/**'
      - '.github/workflows/publish-autoinstrumentation-php.yaml'
    branches:
      - main
  pull_request:
    paths:
      - 'autoinstrumentation/php/**'
      - '.github/workflows/publish-autoinstrumentation-php.yaml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  publish:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Read version
        run: echo "VERSION=$(cat autoinstrumentation/php/version.txt)" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            otel/autoinstrumentation-php
            ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-php
          tags: |
            type=match,pattern=v(.*),group=1,value=v${{ env.VERSION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log into Docker.io
        uses: docker/login-action@v3
        if: ${{ github.event_name == 'push' }}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Package Registry
        uses: docker/login-action@v3
        if: ${{ github.event_name == 'push' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare files for docker image
        run: pushd ./autoinstrumentation/php ; ./prepare_files_for_docker_image.sh --ext-ver ${{ env.VERSION }} --dest-dir ${PWD}/files_for_docker_image ; popd

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: autoinstrumentation/php
          push: ${{ github.event_name == 'push' }}
          build-args: SUB_DIR_WITH_FILES_FOR_DOCKER_IMAGE=files_for_docker_image
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
