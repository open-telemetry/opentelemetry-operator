name: "Publish images"

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

  workflow_dispatch:

jobs:
  publish-containers:
    name: Publish container images
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Unshallow 
        run: git fetch --prune --unshallow

      - name: Describe the current state 
        run: git describe --tags

      - name: Set env vars for the job
        run: |
          grep -v '\#' versions.txt | grep opentelemetry-collector | awk -F= '{print "OTELCOL_VERSION="$2}' >> $GITHUB_ENV
          echo "VERSION_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
          echo "VERSION=$(git describe --tags | sed 's/^v//')" >> $GITHUB_ENV

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v2.3.0
        with:
          images: quay.io/opentelemetry/opentelemetry-operator
          tag-semver: |
            {{raw}}
            {{version}}
            {{major}}.{{minor}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2.1.4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Quay
        uses: docker/login-action@v1 
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build and push Operator image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            VERSION_PKG=github.com/open-telemetry/opentelemetry-operator/internal/version
            VERSION=${{ env.VERSION }}
            VERSION_DATE=${{ env.VERSION_DATE }}
            OTELCOL_VERSION=${{ env.OTELCOL_VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
