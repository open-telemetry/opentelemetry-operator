apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "opentelemetry.io/v1alpha1",
          "kind": "OpenTelemetryCollector",
          "metadata": {
            "name": "splunk-otel-agent",
            "namespace": "splunk-otel-operator-system"
          },
          "spec": {
            "config": "extensions:\n  health_check:\n    endpoint: 0.0.0.0:13133\n  zpages:\n    endpoint: 0.0.0.0:55679\n  k8s_observer:\n    auth_type: serviceAccount\n    node: ${MY_NODE_NAME}\n  zpages: null\n\n# replace smartagent/ receivers with otel counter parts\n# where applicable e.g, smartagent/docker-container-stats\n# should be replaced with docker_stats from otel.\nreceivers:\n  # tracing\n  jaeger:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:14250\n      thrift_http:\n        endpoint: 0.0.0.0:14268\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:55681\n  zipkin:\n    endpoint: 0.0.0.0:9411\n  smartagent/signalfx-forwarder:\n    listenAddress: 0.0.0.0:9080\n    type: signalfx-forwarder\n  # metrics\n  signalfx:\n    endpoint: 0.0.0.0:9943\n  hostmetrics:\n    collection_interval: 10s\n    scrapers:\n      cpu:\n      disk:\n      filesystem:\n      load:\n      memory:\n      network:\n      paging:\n      processes:\n  kubeletstats:\n    auth_type: serviceAccount\n    collection_interval: 10s\n    endpoint: ${MY_NODE_IP}:10250\n    extra_metadata_labels:\n    - container.id\n    metric_groups:\n    - container\n    - pod\n    - node\n  receiver_creator:\n    receivers:\n    watch_observers:\n    - k8s_observer\n  prometheus/self:\n    config:\n      scrape_configs:\n      - job_name: otel-agent\n        scrape_interval: 10s\n        static_configs:\n        - targets:\n          - ${MY_POD_IP}:8888\n\nexporters:\n  sapm:\n    access_token: ${SPLUNK_ACCESS_TOKEN}\n    endpoint: https://ingest.${SPLUNK_REALM}.signalfx.com/v2/trace\n  signalfx:\n    access_token: ${SPLUNK_ACCESS_TOKEN}\n    api_url: https://api.${SPLUNK_REALM}.signalfx.com\n    ingest_url: https://ingest.${SPLUNK_REALM}.signalfx.com\n    sync_host_metadata: true\n  splunk_hec:\n    token: ${SPLUNK_ACCESS_TOKEN}\n    endpoint: https://ingest.${SPLUNK_REALM}.signalfx.com/v1/log\n  logging:\n  logging/debug:\n    loglevel: debug\n\nprocessors:\n  k8s_tagger:\n    extract:\n      metadata:\n        - k8s.namespace.name\n        - k8s.node.name\n        - k8s.pod.name\n        - k8s.pod.uid\n    filter:\n      node: ${MY_NODE_NAME}\n\n  batch:\n  memory_limiter:\n    ballast_size_mib: ${SPLUNK_BALLAST_SIZE_MIB}\n    check_interval: 2s\n    limit_mib: ${SPLUNK_MEMORY_LIMIT_MIB}\n\n  resource:\n    attributes:\n    - action: insert\n      key: k8s.node.name\n      value: ${MY_NODE_NAME}\n    - action: insert\n      key: k8s.cluster.name\n      value: ${MY_CLUSTER_NAME} \n    - action: insert\n      key: deployment.environment\n      value: ${MY_CLUSTER_NAME}\n\n  resource/self:\n    attributes:\n    - action: insert\n      key: k8s.pod.name\n      value: ${MY_POD_NAME}\n    - action: insert\n      key: k8s.pod.uid\n      value: ${MY_POD_UID}\n    - action: insert\n      key: k8s.namespace.name\n      value: ${MY_NAMESPACE}\n\n  resourcedetection:\n    override: false\n    timeout: 10s\n    detectors:\n    - system\n    - env\n    # enable the relevant detectors\n    #- gce\n    #- ecs\n    #- ec2\n    #- azure\n\nservice:\n  extensions: \n    - health_check\n    - k8s_observer\n    - zpages\n  pipelines:\n    traces:\n      receivers:\n        - smartagent/signalfx-forwarder\n        - otlp\n        - jaeger\n        - zipkin\n      processors:\n        #- memory_limiter\n        - k8s_tagger\n        - batch\n        - resource\n        - resourcedetection\n      exporters:\n        - sapm\n        - signalfx\n    metrics:\n      receivers:\n        - hostmetrics\n        - kubeletstats\n        - receiver_creator\n        - signalfx\n      processors:\n        #- memory_limiter\n        - batch\n        - resource\n        - resourcedetection\n      exporters:\n        - signalfx\n    metrics/self:\n      receivers:\n        - prometheus/self\n      processors:\n        #- memory_limiter\n        - batch\n        - resource\n        - resource/self\n        - resourcedetection\n      exporters:\n        - signalfx\n",
            "env": [
              {
                "name": "SPLUNK_REALM",
                "value": "replace-with-signalfx-realm"
              },
              {
                "name": "SPLUNK_ACCESS_TOKEN",
                "valueFrom": {
                  "secretKeyRef": {
                    "key": "access-token",
                    "name": "splunk-access-token"
                  }
                }
              },
              {
                "name": "MY_CLUSTER_NAME",
                "value": "replace-with-cluster-name"
              },
              {
                "name": "MY_NODE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "fieldPath": "spec.nodeName"
                  }
                }
              },
              {
                "name": "MY_NODE_IP",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "status.hostIP"
                  }
                }
              },
              {
                "name": "MY_POD_IP",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "status.podIP"
                  }
                }
              },
              {
                "name": "MY_POD_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "fieldPath": "metadata.name"
                  }
                }
              },
              {
                "name": "MY_POD_UID",
                "valueFrom": {
                  "fieldRef": {
                    "fieldPath": "metadata.uid"
                  }
                }
              },
              {
                "name": "MY_NAMESPACE",
                "valueFrom": {
                  "fieldRef": {
                    "fieldPath": "metadata.namespace"
                  }
                }
              },
              {
                "name": "DISABLED_SPLUNK_BALLAST_SIZE_MIB",
                "value": "128"
              },
              {
                "name": "DISABLED_SPLUNK_BALLAST_SIZE_MIB",
                "value": "200"
              },
              {
                "name": "HOST_PROC",
                "value": "/hostfs/proc"
              },
              {
                "name": "HOST_SYS",
                "value": "/hostfs/sys"
              },
              {
                "name": "HOST_ETC",
                "value": "/hostfs/etc"
              },
              {
                "name": "HOST_VAR",
                "value": "/hostfs/var"
              },
              {
                "name": "HOST_RUN",
                "value": "/hostfs/run"
              },
              {
                "name": "HOST_DEV",
                "value": "/hostfs/dev"
              }
            ],
            "hostNetwork": true,
            "image": "quay.io/signalfx/splunk-otel-collector:0.33.0",
            "mode": "daemonset",
            "serviceAccount": "splunk-otel-agent-collector",
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node.alpha.kubernetes.io/role",
                "operator": "Exists"
              },
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              }
            ],
            "volumeMounts": [
              {
                "mountPath": "/hostfs",
                "mountPropagation": "HostToContainer",
                "name": "hostfs",
                "readOnly": true
              },
              {
                "mountPath": "/etc/passwd",
                "name": "etc-passwd",
                "readOnly": true
              }
            ],
            "volumes": [
              {
                "hostPath": {
                  "path": "/"
                },
                "name": "hostfs"
              },
              {
                "hostPath": {
                  "path": "/etc/passwd"
                },
                "name": "etc-passwd"
              }
            ]
          }
        }
      ]
    capabilities: Basic Install
    operators.operatorframework.io/builder: operator-sdk-v1.10.0+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v2
  name: splunk-otel-operator.v0.33.12
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: OpenTelemetryCollector
      name: opentelemetrycollectors.opentelemetry.io
      version: v1alpha1
  description: Operator to help deploy and manage Splunk OpenTelemetry Collector
  displayName: Splunk OpenTelemetry Operator
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - daemonsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - list
          - update
        - apiGroups:
          - opentelemetry.io
          resources:
          - opentelemetrycollectors
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - opentelemetry.io
          resources:
          - opentelemetrycollectors/finalizers
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - opentelemetry.io
          resources:
          - opentelemetrycollectors/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: splunk-otel-operator-controller-manager
      deployments:
      - name: splunk-otel-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: splunk-otel
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                app: splunk-otel
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --metrics-addr=127.0.0.1:8080
                - --enable-leader-election
                command:
                - /manager
                image: quay.io/owais/splunk-otel-operator:v0.33.12
                name: manager
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                resources:
                  limits:
                    cpu: 100m
                    memory: 128Mi
                  requests:
                    cpu: 100m
                    memory: 64Mi
                volumeMounts:
                - mountPath: /tmp/k8s-webhook-server/serving-certs
                  name: cert
                  readOnly: true
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources: {}
              serviceAccountName: splunk-otel-operator-controller-manager
              terminationGracePeriodSeconds: 10
              volumes:
              - name: cert
                secret:
                  defaultMode: 420
                  secretName: splunk-otel-operator-controller-manager-service-cert
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps/status
          verbs:
          - get
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: splunk-otel-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - splunk
  - APM
  - logging
  - tracing
  - metrics
  - observability
  - opentelemetry
  links:
  - name: Splunk Otel Operator
    url: https://github.com/signalf/splunk-otel-operator
  maintainers:
  - email: olone@splunk.com
    name: Owais Lone
  maturity: alpha
  provider:
    name: Splunk Inc
    url: https://github.com/signalf/splunk-otel-operator
  version: 0.33.12
  webhookdefinitions:
  - admissionReviewVersions:
    - v1
    - v1beta1
    containerPort: 443
    deploymentName: splunk-otel-operator-controller-manager
    failurePolicy: Fail
    generateName: vopentelemetrycollectorcreateupdate.kb.io
    rules:
    - apiGroups:
      - opentelemetry.io
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - opentelemetrycollectors
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-opentelemetry-io-v1alpha1-opentelemetrycollector
  - admissionReviewVersions:
    - v1
    - v1beta1
    containerPort: 443
    deploymentName: splunk-otel-operator-controller-manager
    failurePolicy: Ignore
    generateName: vopentelemetrycollectordelete.kb.io
    rules:
    - apiGroups:
      - opentelemetry.io
      apiVersions:
      - v1alpha1
      operations:
      - DELETE
      resources:
      - opentelemetrycollectors
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-opentelemetry-io-v1alpha1-opentelemetrycollector
  - admissionReviewVersions:
    - v1
    - v1beta1
    containerPort: 443
    deploymentName: splunk-otel-operator-controller-manager
    failurePolicy: Fail
    generateName: mopentelemetrycollector.kb.io
    rules:
    - apiGroups:
      - opentelemetry.io
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - opentelemetrycollectors
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate-opentelemetry-io-v1alpha1-opentelemetrycollector
  - admissionReviewVersions:
    - v1
    - v1beta1
    containerPort: 443
    deploymentName: splunk-otel-operator-controller-manager
    failurePolicy: Ignore
    generateName: mpod.kb.io
    rules:
    - apiGroups:
      - ""
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - pods
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate-v1-pod
