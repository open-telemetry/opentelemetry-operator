apiVersion: splunk.com/v1alpha1
kind: SplunkOtelAgent
metadata:
  name: splunk-otel-agent
  namespace: splunk-otel-operator-system
spec:
  config: |
    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
      zpages:
        endpoint: 0.0.0.0:55679
      k8s_observer:
        auth_type: serviceAccount
        node: ${MY_NODE_NAME}
      zpages: null

    # replace smartagent/ receivers with otel counter parts
    # where applicable e.g, smartagent/docker-container-stats
    # should be replaced with docker_stats from otel.
    receivers:
      # tracing
      jaeger:
        protocols:
          grpc:
            endpoint: 0.0.0.0:14250
          thrift_http:
            endpoint: 0.0.0.0:14268
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:55681
      zipkin:
        endpoint: 0.0.0.0:9411
      smartagent/signalfx-forwarder:
        listenAddress: 0.0.0.0:9080
        type: signalfx-forwarder
      # metrics
      signalfx:
        endpoint: 0.0.0.0:9943
      hostmetrics:
        collection_interval: 10s
        scrapers:
          cpu:
          disk:
          filesystem:
          load:
          memory:
          network:
          paging:
          processes:
      kubeletstats:
        auth_type: serviceAccount
        collection_interval: 10s
        endpoint: ${MY_NODE_IP}:10250
        extra_metadata_labels:
        - container.id
        metric_groups:
        - container
        - pod
        - node
      receiver_creator:
        receivers:
        watch_observers:
        - k8s_observer
      prometheus/self:
        config:
          scrape_configs:
          - job_name: otel-agent
            scrape_interval: 10s
            static_configs:
            - targets:
              - ${MY_POD_IP}:8888

    exporters:
      sapm:
        access_token: ${SPLUNK_ACCESS_TOKEN}
        endpoint: https://ingest.${SPLUNK_REALM}.signalfx.com/v2/trace
      signalfx:
        access_token: ${SPLUNK_ACCESS_TOKEN}
        api_url: https://api.${SPLUNK_REALM}.signalfx.com
        ingest_url: https://ingest.${SPLUNK_REALM}.signalfx.com
        sync_host_metadata: true
      splunk_hec:
        token: ${SPLUNK_ACCESS_TOKEN}
        endpoint: https://ingest.${SPLUNK_REALM}.signalfx.com/v1/log
      logging:
      logging/debug:
        loglevel: debug

    processors:
      k8s_tagger:
        extract:
          metadata:
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.name
            - k8s.pod.uid
        filter:
          node: ${MY_NODE_NAME}

      batch:
      memory_limiter:
        ballast_size_mib: ${SPLUNK_BALLAST_SIZE_MIB}
        check_interval: 2s
        limit_mib: ${SPLUNK_MEMORY_LIMIT_MIB}

      resource:
        attributes:
        - action: insert
          key: k8s.node.name
          value: ${MY_NODE_NAME}
        - action: insert
          key: k8s.cluster.name
          value: ${MY_CLUSTER_NAME} 
        - action: insert
          key: deployment.environment
          value: ${MY_CLUSTER_NAME}

      resource/self:
        attributes:
        - action: insert
          key: k8s.pod.name
          value: ${MY_POD_NAME}
        - action: insert
          key: k8s.pod.uid
          value: ${MY_POD_UID}
        - action: insert
          key: k8s.namespace.name
          value: ${MY_NAMESPACE}

      resourcedetection:
        override: false
        timeout: 10s
        detectors:
        - system
        - env
        # enable the relevant detectors
        #- gce
        #- ecs
        #- ec2
        #- azure

    service:
      extensions: 
        - health_check
        - k8s_observer
        - zpages
      pipelines:
        traces:
          receivers:
            - smartagent/signalfx-forwarder
            - otlp
            - jaeger
            - zipkin
          processors:
            #- memory_limiter
            - k8s_tagger
            - batch
            - resource
            - resourcedetection
          exporters:
            - sapm
            - signalfx
        metrics:
          receivers:
            - hostmetrics
            - kubeletstats
            - receiver_creator
            - signalfx
          processors:
            #- memory_limiter
            - batch
            - resource
            - resourcedetection
          exporters:
            - signalfx
        metrics/self:
          receivers:
            - prometheus/self
          processors:
            #- memory_limiter
            - batch
            - resource
            - resource/self
            - resourcedetection
          exporters:
            - signalfx

  mode: daemonset
  env:
    - name: SPLUNK_REALM
      value: replace-with-signalfx-realm
    - name: SPLUNK_ACCESS_TOKEN
      valueFrom:
        secretKeyRef:
          name: splunk-access-token
          key: access-token
    - name: MY_CLUSTER_NAME
      value: replace-with-cluster-name
    - name: MY_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: MY_NODE_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.hostIP
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: MY_POD_UID
      valueFrom:
        fieldRef:
          fieldPath: metadata.uid
    - name: MY_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace

    # TODO: verify and enable feature
    - name: DISABLED_SPLUNK_BALLAST_SIZE_MIB
      value: "128" 
    - name: DISABLED_SPLUNK_BALLAST_SIZE_MIB
      value: "200" 

    # Env variables for host metrics receiver
    - name: HOST_PROC
      value: /hostfs/proc
    - name: HOST_SYS
      value: /hostfs/sys
    - name: HOST_ETC
      value: /hostfs/etc
    - name: HOST_VAR
      value: /hostfs/var
    - name: HOST_RUN
      value: /hostfs/run
    - name: HOST_DEV
      value: /hostfs/dev

  # serviceAccount: splunk-otel-agent-collector
  hostNetwork: true
  volumeMounts:
    - mountPath: /hostfs
      name: hostfs
      readOnly: true
      mountPropagation: HostToContainer
    - mountPath: /etc/passwd
      name: etc-passwd
      readOnly: true
  volumes:
    - name: hostfs
      hostPath:
        path: /
    - name: etc-passwd
      hostPath:
        path: /etc/passwd
  tolerations:
    - effect: NoSchedule
      key: node.alpha.kubernetes.io/role
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
  image: "quay.io/signalfx/splunk-otel-collector:0.33.0"
