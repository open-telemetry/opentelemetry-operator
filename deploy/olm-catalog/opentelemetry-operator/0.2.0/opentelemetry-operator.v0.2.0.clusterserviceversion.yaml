apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "opentelemetry.io/v1alpha1",
          "kind": "OpenTelemetryCollector",
          "metadata": {
            "name": "simplest"
          },
          "spec": {
            "config": "receivers:\n  jaeger:\n\nprocessors:\n  queued-retry:\n\nexporters:\n  logging:\n\npipelines:\n  traces:\n    receivers: [jaeger]\n    processors: [queued-retry]\n    exporters: [logging]\n"
          }
        }
      ]
    capabilities: Basic Install
  name: opentelemetry-operator.v0.2.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: OpenTelemetryCollector is the Schema for the opentelemetrycollectors
        API
      displayName: OpenTelemetry Collector
      kind: OpenTelemetryCollector
      name: opentelemetrycollectors.opentelemetry.io
      specDescriptors:
      - description: Args is the set of arguments to pass to the OpenTelemetry Collector
          binary
        displayName: Args
        path: args
      - description: Config is the raw JSON to be used as the collector's configuration.
          Refer to the OpenTelemetry Collector documentation for details.
        displayName: Config
        path: config
      - description: Image indicates the container image to use for the OpenTelemetry
          Collector.
        displayName: Image
        path: image
      - description: Mode represents how the collector should be deployed (deployment
          vs. daemonset)
        displayName: Mode
        path: mode
      - description: Ports allows a set of ports to be exposed by the underlying v1.Service.
          By default, the operator will attempt to infer the required ports by parsing
          the .Spec.Config property but this property can be used to open aditional
          ports that can't be inferred by the operator, like for custom receivers.
        displayName: Ports
        path: ports
      - description: Replicas is the number of pod instances for the underlying OpenTelemetry
          Collector
        displayName: Replicas
        path: replicas
      - description: ServiceAccount indicates the name of an existing service account
          to use with this instance.
        displayName: Service Account
        path: serviceAccount
      - description: VolumeMounts represents the mount points to use in the underlying
          collector deployment(s)
        displayName: Volume Mounts
        path: volumeMounts
      - description: Volumes represents which volumes to use in the underlying collector
          deployment(s).
        displayName: Volumes
        path: volumes
      version: v1alpha1
  description: Placeholder description
  displayName: Opentelemetry Operator
  install:
    spec:
      deployments:
      - name: opentelemetry-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: opentelemetry-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: opentelemetry-operator
            spec:
              containers:
              - command:
                - opentelemetry-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: opentelemetry-operator
                image: quay.io/opentelemetry/opentelemetry-operator:v0.2.0
                imagePullPolicy: Always
                name: opentelemetry-operator
                resources: {}
              serviceAccountName: opentelemetry-operator
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - services/finalizers
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          - serviceaccounts
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - opentelemetry-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - replicasets
          - deployments
          verbs:
          - get
        - apiGroups:
          - opentelemetry.io
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        serviceAccountName: opentelemetry-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - tracing
  - distributed tracing
  - monitoring
  - troubleshooting
  maintainers:
  - email: juraci.github@kroehling.de
    name: Juraci Paixão Kröhling
  maturity: alpha
  provider:
    name: OpenTelemetry
  replaces: opentelemetry-operator.v0.0.2
  version: 0.2.0
