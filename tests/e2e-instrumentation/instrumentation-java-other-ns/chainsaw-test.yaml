# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: instrumentation-java-other-ns
spec:
  steps:
  - name: Add OpenShift namespace annotations
    use:
      template: ../../step-templates/openshift-namespace-annotations.yaml
  - name: step-01
    try:
    - delete:
        ref:
          apiVersion: v1
          kind: Namespace
          name: my-other-ns
  - name: step-02
    try:
    - apply:
        file: 02-install-collector.yaml
    - apply:
        file: 02-install-instrumentation.yaml
  - name: step-03
    try:
    - apply:
        file: 03-install-app.yaml
    - assert:
        file: 03-assert.yaml
    catch:
      - podLogs:
          selector: app=my-java-other-ns
  - name: Make a request to the app
    try:
      - command:
          env:
          - name: appnamespace
            value: ($namespace)
          entrypoint: kubectl
          args:
            - get
            - pod
            - -n
            - $appnamespace
            - -l
            - app=my-java-other-ns
            - -o
            - jsonpath={.items[0].metadata.name}
          outputs:
          - name: podName
            value: ($stdout)
      - proxy:
          apiVersion: v1
          kind: Pod
          name: ($podName)
          namespace: ($namespace)
          port: "8080"
  - name: Wait for telemetry data to be collected
    try:
    - command:
        entrypoint: kubectl
        args:
          - get
          - pod
          - -n
          - ${NAMESPACE}
          - -l
          - app=my-java-other-ns
          - -o
          - jsonpath={.items[0].spec.initContainers[0].image}
        outputs:
          - name: instrumentationImage
            value: ($stdout)
    - script:
        bindings:
          - name: instrumentationVersion
            value: (split($instrumentationImage,':')[1])
          - name: instrumentationMajorVersion
            value: (to_number(split($instrumentationVersion,'.')[0]))
          - name: jvmProcessMemoryMetricName
            value: (($instrumentationMajorVersion < `2` && 'process.runtime.jvm.memory.usage') || 'jvm.memory.used')
        env:
          - name: LABEL_SELECTOR
            value: "app.kubernetes.io/name=deployment-collector"
          - name: CONTAINER_NAME
            value: "otc-container" 
          - name: RETRY_TIMEOUT
            value: "120"
          - name: RETRY_SLEEP
            value: "5"
          - name: SEARCH_STRINGS_ENV
            value: ($jvmProcessMemoryMetricName)
        timeout: 2m
        content: ../../test-e2e-apps/scripts/check_pod_logs.sh
  - name: Check the instrumented app has sent the telemetry data successfully
    try:
      - command:
          entrypoint: kubectl
          args:
            - get
            - pod
            - -n
            - ${NAMESPACE}
            - -l
            - app.kubernetes.io/name=deployment-collector
            - -o
            - jsonpath={.items[0].metadata.name}
          outputs:
          - name: podName
            value: ($stdout)
      - script:
          env:
          - name: podName
            value: ($podName)
          content: |
            #!/bin/bash
            # set -ex
            kubectl get --raw /api/v1/namespaces/$NAMESPACE/pods/${podName}:8888/proxy/metrics
          outputs:
          - name: metrics
            value: (x_metrics_decode($stdout))
          check:
            ($error == null): true
      - assert:
          resource:
            ($metrics[?as_string(metric."__name__") == 'otelcol_exporter_sent_spans_total'].value | [0] > `1`): true
            ($metrics[?as_string(metric."__name__") == 'otelcol_receiver_accepted_spans_total'].value | [0] > `1`): true
            ($metrics[?as_string(metric."__name__") == 'otelcol_exporter_sent_metric_points_total'].value | [0] > `1`): true
            ($metrics[?as_string(metric."__name__") == 'otelcol_receiver_accepted_metric_points_total'].value | [0] > `1`): true
    catch:
      - podLogs:
          selector: app=my-java-other-ns
          container: otc-container