apiVersion: v1
kind: Pod
metadata:
  annotations:
    instrumentation.opentelemetry.io/inject-python: "true"
  labels:
    app: my-python
spec:
  (containers[?name == 'myapp']):
  - name: myapp
    env:
    - name: OTEL_NODE_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.hostIP
    - name: OTEL_POD_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    - name: OTEL_LOG_LEVEL
      value: debug
    - name: OTEL_TRACES_EXPORTER
      value: otlp
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: http://deployment-collector:4318
    - name: OTEL_PYTHON_DISABLED_INSTRUMENTATIONS
      value: system_metrics
    - name: PYTHONPATH
      value: /otel-auto-instrumentation-python/opentelemetry/instrumentation/auto_instrumentation:/otel-auto-instrumentation-python
    - name: OTEL_EXPORTER_OTLP_PROTOCOL
      value: http/protobuf
    - name: OTEL_METRICS_EXPORTER
      value: otlp
    - name: OTEL_LOGS_EXPORTER
      value: otlp
    - name: OTEL_EXPORTER_OTLP_TIMEOUT
      value: "20000"
    - name: OTEL_TRACES_SAMPLER
      value: always_on
    - name: SPLUNK_TRACE_RESPONSE_HEADER_ENABLED
      value: "true"
    - name: OTEL_SERVICE_NAME
      value: my-python
    - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: OTEL_RESOURCE_ATTRIBUTES_NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: OTEL_PROPAGATORS
      value: jaeger,b3
    - name: OTEL_RESOURCE_ATTRIBUTES
      value:
        ( contains(@, 'k8s.container.name=myapp') ): true
        ( contains(@, 'k8s.pod.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME)') ): true
        ( contains(@, 'k8s.replicaset.name=my-python-') ): true
        ( contains(@, 'k8s.deployment.name=my-python') ): true
        ( contains(@, concat('k8s.namespace.name=', $namespace)) ): true
        ( contains(@, 'k8s.node.name=$(OTEL_RESOURCE_ATTRIBUTES_NODE_NAME)') ): true
        ( contains(@, join('', ['service.instance.id=', $namespace, '.$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME).myapp'])  ) ): true
        ( contains(@, 'service.version=main') || contains(@, 'service.version=main-3.9') ): true
    ports:
    - containerPort: 8080
      protocol: TCP
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      readOnly: true
    - mountPath: /otel-auto-instrumentation-python
      name: opentelemetry-auto-instrumentation-python
status:
  (containerStatuses[?name == 'myapp']):
  - name: myapp
    ready: true
    started: true
  phase: Running
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: opentelemetry-collector
    app.kubernetes.io/managed-by: opentelemetry-operator
    app.kubernetes.io/name: deployment-collector
    app.kubernetes.io/part-of: opentelemetry
  name: deployment-collector
status:
  availableReplicas: 1
  readyReplicas: 1
  replicas: 1
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: opentelemetry-collector
    app.kubernetes.io/managed-by: opentelemetry-operator
    app.kubernetes.io/name: deployment-collector
    app.kubernetes.io/part-of: opentelemetry
  name: deployment-collector
spec:
  ports:
  - appProtocol: grpc
    name: otlp-grpc
    port: 4317
    protocol: TCP
    targetPort: 4317
  - appProtocol: http
    name: otlp-http
    port: 4318
    protocol: TCP
    targetPort: 4318
