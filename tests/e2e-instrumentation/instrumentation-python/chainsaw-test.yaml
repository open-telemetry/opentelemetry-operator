# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: instrumentation-python
spec:
  bindings:
    - name: LABEL_SELECTOR
      value: app=my-python
    - name: COLLECTOR_LABEL_SELECTOR
      value: app.kubernetes.io/name=deployment-collector
  steps:
  - name: Add OpenShift namespace annotations
    use:
      template: ../../step-templates/openshift-namespace-annotations.yaml
  - name: Setup instrumentation and collector
    try:
    - apply:
        file: 00-install-collector.yaml
    - apply:
        file: 00-install-instrumentation.yaml
  - name: Install test app
    try:
    - apply:
        bindings:
          - name: APP_IMAGE_TAG
            value: main
          - name: APP_IMAGE
            value: (join(':', ['ghcr.io/open-telemetry/opentelemetry-operator/e2e-test-app-python', $APP_IMAGE_TAG]))
        file: 01-install-app.yaml
    - assert:
        file: 01-assert.yaml
    catch:
      - podLogs:
          selector: ($LABEL_SELECTOR)
  - name: Make a request to the app
    use:
      template: app-request.yaml
  - name: Wait for telemetry data
    use:
      template: wait-for-telemetry-data.yaml
  - name: Check the instrumented app has sent the telemetry data successfully
    use:
      template: check-telemetry-data.yaml
---
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: instrumentation-python-oldest
spec:
  bindings:
    - name: LABEL_SELECTOR
      value: app=my-python
    - name: COLLECTOR_LABEL_SELECTOR
      value: app.kubernetes.io/name=deployment-collector
  steps:
    - name: Add OpenShift namespace annotations
      use:
        template: ../../step-templates/openshift-namespace-annotations.yaml
    - name: Setup instrumentation and collector
      try:
        - apply:
            file: 00-install-collector.yaml
        - apply:
            file: 00-install-instrumentation.yaml
    - name: Install test app
      try:
        - apply:
            bindings:
              - name: APP_IMAGE_TAG
                value: main-3.9
              - name: APP_IMAGE
                value: (join(':', ['ghcr.io/open-telemetry/opentelemetry-operator/e2e-test-app-python', $APP_IMAGE_TAG]))
            file: 01-install-app.yaml
        - assert:
            file: 01-assert.yaml
      catch:
        - podLogs:
            selector: ($LABEL_SELECTOR)
    - name: Make a request to the app
      use:
        template: app-request.yaml
    - name: Wait for telemetry data
      use:
        template: wait-for-telemetry-data.yaml
    - name: Check the instrumented app has sent the telemetry data successfully
      use:
        template: check-telemetry-data.yaml