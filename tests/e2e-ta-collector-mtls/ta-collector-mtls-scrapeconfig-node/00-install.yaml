apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  name: ta
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  name: collector
---
apiVersion: v1
kind: Secret
metadata:
  name: collector
  annotations:
    kubernetes.io/service-account.name: collector
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: (join('-', ['ta', $namespace]))
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - services
  - endpoints
  - configmaps
  - secrets
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - statefulsets
  - services
  - endpoints
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  - podmonitors
  - scrapeconfigs
  - probes
  verbs:
  - get
  - watch
  - list
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: (join('-', ['collector', $namespace]))
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - watch
  - list
- nonResourceURLs:
  - /metrics
  - /metrics/cadvisor
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name:  (join('-', ['opentelemetry-operator-controller-manager-cert-manager-role', $namespace]))
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - issuers
  - certificaterequests
  - certificates
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: (join('-', ['opentelemetry-operator-controller-manager-cert-manager-role', $namespace]))
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: (join('-', ['opentelemetry-operator-controller-manager-cert-manager-role', $namespace]))
subjects:
- kind: ServiceAccount
  name: opentelemetry-operator-controller-manager
  namespace: opentelemetry-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: (join('-', ['ta', $namespace]))
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: (join('-', ['ta', $namespace]))
subjects:
- kind: ServiceAccount
  name: ta
  namespace: ($namespace)
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: (join('-', ['collector', $namespace]))
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: (join('-', ['collector', $namespace]))
subjects:
- kind: ServiceAccount
  name: collector
  namespace: ($namespace)
---
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: prometheus-cr-v1beta1
spec:
  config:
    receivers:
      prometheus:
        config:
          scrape_configs: []

    processors:

    exporters:
      prometheus:
        endpoint: 0.0.0.0:9090
    service:
      pipelines:
        metrics:
          receivers: [prometheus]
          exporters: [prometheus]
      telemetry:
        logs:
          level: "DEBUG"
          development: true
          encoding: "json"
  mode: statefulset
  serviceAccount: collector
  targetAllocator:
    enabled: true
    prometheusCR:
      enabled: true
      scrapeInterval: 1s
      scrapeConfigSelector: {}
    serviceAccount: ta
