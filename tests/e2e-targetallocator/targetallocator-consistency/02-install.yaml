# OTel Collector #1 - direct scraping (control group)
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: direct-scrape
  labels:
    collector-type: direct-scrape
spec:
  config:
    receivers:
      prometheus:
        config:
          global:
            scrape_interval: 10s
          scrape_configs:
          # Same configuration as TA-collector - static configuration
          - job_name: 'static-targets'
            static_configs:
            - targets: 
              - 'fake-app-1:8081'
              - 'fake-app-1:8082'
              - 'fake-app-1:8083'
              - 'fake-app-1:8084'
              - 'fake-app-1:8085'
              labels:
                env: 'test'
                team: 'platform'
            relabel_configs:
            - source_labels: [__address__]
              action: replace
              regex: ([^:]+):.*
              replacement: $1:8080
              target_label: __address__
            - source_labels: [env]
              target_label: environment
            - source_labels: [team]
              target_label: team_label
            # Verify that metrics_relabel_configs is effective
            metric_relabel_configs:
            - source_labels: [__name__]
              action: keep
              regex: "^up$"
            - source_labels: [job_sign]
              action: replace
              regex: ".*"
              replacement: duplicate_job
              target_label: job_sign
          # Same configuration as TA-collector - Kubernetes service discovery for BlackBox
          - job_name: 'k8s-blackbox-discovery'
            kubernetes_sd_configs:
            - role: pod
              namespaces:
                names:
                - ($namespace)
            relabel_configs:
            - source_labels: [__meta_kubernetes_pod_label_app]
              action: keep
              regex: blackbox-exporter
            - source_labels: [__address__]
              action: replace
              regex: ([^:]+):.*
              replacement: $1:9115
              target_label: __address__
            - source_labels: [__meta_kubernetes_pod_name]
              target_label: pod_name
            - source_labels: [__meta_kubernetes_namespace]
              target_label: kubernetes_namespace
            # Verify that metrics_relabel_configs is effective
            metric_relabel_configs:
            - source_labels: [__name__]
              action: keep
              regex: "^up$"
            - source_labels: [job_sign]
              action: replace
              regex: ".*"
              replacement: single_job
              target_label: job_sign 
    processors:
      # Ensure metrics are flushed to the exporter at least once
      batch:
        send_batch_size: 1000
        timeout: 20s
    exporters:
      prometheus:
        endpoint: "0.0.0.0:8889"
    service:
      pipelines:
        metrics:
          receivers: [prometheus]
          processors: [batch]
          exporters: [prometheus]
  mode: statefulset
  replicas: 1
  serviceAccount: ta-common