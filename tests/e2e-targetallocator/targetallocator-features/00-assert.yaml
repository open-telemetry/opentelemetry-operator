apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: stateful-collector
spec:
  podManagementPolicy: Parallel
  template:
    spec:
      containers:
      - args:
        - --config=/conf/collector.yaml
        name: otc-container
        volumeMounts:
        - mountPath: /conf
          name: otc-internal
        - mountPath: /usr/share/testvolume
          name: testvolume
      volumes:
      - configMap:
          items:
          - key: collector.yaml
            path: collector.yaml
          name: stateful-collector-31b1d381
        name: otc-internal
      - emptyDir: {}
        name: testvolume
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: testvolume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      volumeMode: Filesystem
status:
  readyReplicas: 1
  replicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stateful-targetallocator
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: ingress-ready
                operator: In
                values:
                - "true"
      containers:
      - env:
        - name: TEST_ENV
          value: test
        - name: OTELCOL_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /livez
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: ta-container
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          privileged: false
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /conf
          name: ta-internal
      securityContext:
        fsGroup: 3000
        runAsGroup: 3000
        runAsUser: 1000
      volumes:
      - configMap:
          items:
          - key: targetallocator.yaml
            path: targetallocator.yaml
          name: stateful-targetallocator
        name: ta-internal
status:
  readyReplicas: 1
  replicas: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: stateful-targetallocator
