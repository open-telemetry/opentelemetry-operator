apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  name: ta
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: targetallocator-features
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: (join('-', ['default-view', $namespace]))
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: targetallocator-features
subjects:
- kind: ServiceAccount
  name: ta
  namespace: ($namespace)
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: stateful
spec:
  config: |
    receivers:
      # Collect own metrics
      prometheus:
        config:
          scrape_configs:
          - job_name: 'otel-collector'
            scrape_interval: 10s
            static_configs:        
            - targets: [ '0.0.0.0:8888' ]
            metric_relabel_configs:
            - action: labeldrop
              regex: (id|name)
            - action: labelmap
              regex: label_(.+)
              replacement: $$1
    
    processors:
    
    exporters:
      debug:
    service:
      pipelines:
        metrics:
          receivers: [prometheus]
          processors: []
          exporters: [debug]

  mode: statefulset
  targetAllocator:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: ingress-ready
              operator: In
              values:
              - "true"
    enabled: true
    env:
    - name: TEST_ENV
      value: test
    podSecurityContext:
      fsGroup: 3000
      runAsGroup: 3000
      runAsUser: 1000
    prometheusCR:
      enabled: true
      filterStrategy: ""
    securityContext:
      capabilities:
        add:
        - NET_BIND_SERVICE
        drop:
        - ALL
      privileged: false
      runAsGroup: 1000
      runAsUser: 1000
    serviceAccount: ta
  volumeClaimTemplates:
  - metadata:
      name: testvolume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
  volumeMounts:
  - mountPath: /usr/share/testvolume
    name: testvolume
  volumes:
  - name: testvolume
