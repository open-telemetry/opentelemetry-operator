# This creates three different deployments.  The last two are to check the targetCPUUtilization and targetMemoryUtilization
# options.  The first one will be used to see if we scale properly.  Note that we are only scaling up to 2 because of
# limitations of KUTTL
#
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: simplest
spec:
  minReplicas: 1
  maxReplicas: 2
  autoscaler:
    behavior:
      scaleUp:
        stabilizationWindowSeconds: 10
      scaleDown:
        stabilizationWindowSeconds: 15
  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 5m
      memory: 64Mi

  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    processors:

    exporters:
      logging:

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: []
          exporters: [logging]
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: simplest-set-utilization
spec:
  minReplicas: 1
  maxReplicas: 2
  autoscaler:
    targetCPUUtilization: 50
  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 5m
      memory: 64Mi

  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    processors:

    exporters:
      logging:

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: []
          exporters: [logging]
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: simplest-set-memory-utilization
spec:
  minReplicas: 1
  maxReplicas: 2
  autoscaler:
    targetMemoryUtilization: 42
  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 5m
      memory: 64Mi

  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    processors:

    exporters:
      logging:

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: []
          exporters: [logging]

