apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: operator-restart
spec:
  # Running the test serially as its disruptive causing operator pod restart
  concurrent: false
  steps:
  - name: Enable operator network policy
    try:
    - command:
        entrypoint: kubectl
        args:
        - get
        - pods
        - -A
        - -l control-plane=controller-manager
        - -l app.kubernetes.io/name=opentelemetry-operator
        - -o 
        - jsonpath={.items[0].metadata.namespace}
        outputs:
        - name: OTEL_NAMESPACE
          value: ($stdout)
    - command:
        env:
          - name: otelnamespace
            value: ($OTEL_NAMESPACE)
        entrypoint: kubectl
        args:
          - patch
          - deployment
          - opentelemetry-operator-controller-manager
          - -n
          - $otelnamespace
          - --type=json
          - -p
          - '[{"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--feature-gates=operator.networkpolicy,operand.networkpolicy"}]'
    # Adding 10s sleep here cause sometimes the pod will be in running state for a while but can fail later if there is any issue with the component startup.
    - sleep:
        duration: 10s
    - assert:
        file: 00-assert-operator-pod.yaml
    - assert:
        file: 00-assert-operator-network-policy.yaml
    - apply:
#        check if the operator is able to talk to the API server and create collector resources
        file: 01-install-collector.yaml
    - assert:
        file: 01-assert-collector.yaml
