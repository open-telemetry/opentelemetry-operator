apiVersion: v1
kind: ServiceAccount
metadata:
  name: ta
automountServiceAccountToken: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: collector
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ta
rules:
- apiGroups: [""]
  resources:
    - pods
    - nodes
    - services
    - endpoints
    - configmaps
    - secrets
    - namespaces
  verbs:
    - get
    - watch
    - list
- apiGroups: ["apps"]
  resources:
    - statefulsets
    - services
    - endpoints
  verbs:
    - get
    - watch
    - list
- apiGroups: ["discovery.k8s.io"]
  resources:
    - endpointslices
  verbs:
    - get
    - watch
    - list
- apiGroups: ["networking.k8s.io"]
  resources:
    - ingresses
  verbs:
    - get
    - watch
    - list
- apiGroups: ["monitoring.coreos.com"]
  resources:
    - servicemonitors
    - podmonitors
  verbs:
    - get
    - watch
    - list
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: collector
rules:
- apiGroups: [""]
  resources:
    - pods
    - nodes
    - nodes/metrics
    - services
    - endpoints
  verbs:
    - get
    - watch
    - list
- apiGroups: ["networking.k8s.io"]
  resources:
    - ingresses
  verbs:
    - get
    - watch
    - list
- nonResourceURLs: ["/metrics", "/metrics/cadvisor"]
  verbs: ["get"]
---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
  - command: kubectl create clusterrolebinding ta-$NAMESPACE --clusterrole=ta --serviceaccount=$NAMESPACE:ta
  - command: kubectl create clusterrolebinding collector-$NAMESPACE --clusterrole=collector --serviceaccount=$NAMESPACE:collector
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: prometheus-cr
spec:
  mode: statefulset
  serviceAccount: collector
  targetAllocator:
    enabled: true
    serviceAccount: ta
    image: "local/opentelemetry-operator-targetallocator:e2e"
    prometheusCR:
      enabled: true
  config: |
    receivers:
      prometheus:
        config:
          scrape_configs: []

    processors:

    exporters:
      prometheus:
        endpoint: 0.0.0.0:9090
    service:
      pipelines:
        metrics:
          receivers: [prometheus]
          processors: []
          exporters: [prometheus]
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prometheus-cr
spec:
  endpoints:
  - port: monitoring
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: opentelemetry-operator
